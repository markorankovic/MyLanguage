/* Generated By:JavaCC: Do not edit this line. MyParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int REQUIRE = 5;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int WHILE = 7;
  /** RegularExpression Id. */
  int FOR = 8;
  /** RegularExpression Id. */
  int FUNC = 9;
  /** RegularExpression Id. */
  int CLASS = 10;
  /** RegularExpression Id. */
  int STRING = 11;
  /** RegularExpression Id. */
  int DIGIT = 12;
  /** RegularExpression Id. */
  int INTEGER = 13;
  /** RegularExpression Id. */
  int LET = 14;
  /** RegularExpression Id. */
  int VAR = 15;
  /** RegularExpression Id. */
  int CAPLETTER = 16;
  /** RegularExpression Id. */
  int LETTER = 17;
  /** RegularExpression Id. */
  int IDENTIFIER = 18;
  /** RegularExpression Id. */
  int TYPE = 19;
  /** RegularExpression Id. */
  int ASSIGNMENT = 20;
  /** RegularExpression Id. */
  int RETURNSYMBOL = 21;
  /** RegularExpression Id. */
  int ADD = 22;
  /** RegularExpression Id. */
  int SUB = 23;
  /** RegularExpression Id. */
  int MUL = 24;
  /** RegularExpression Id. */
  int DIV = 25;
  /** RegularExpression Id. */
  int EQ = 26;
  /** RegularExpression Id. */
  int NEQ = 27;
  /** RegularExpression Id. */
  int LESS = 28;
  /** RegularExpression Id. */
  int GREATER = 29;
  /** RegularExpression Id. */
  int LESSOREQUAL = 30;
  /** RegularExpression Id. */
  int GREATEROREQUAL = 31;
  /** RegularExpression Id. */
  int OBRACKET = 32;
  /** RegularExpression Id. */
  int CBRACKET = 33;
  /** RegularExpression Id. */
  int OBRACE = 34;
  /** RegularExpression Id. */
  int CBRACE = 35;
  /** RegularExpression Id. */
  int COLON = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int EOL = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"require\"",
    "\"if\"",
    "\"while\"",
    "\"for\"",
    "\"func\"",
    "\"class\"",
    "<STRING>",
    "<DIGIT>",
    "<INTEGER>",
    "\"let\"",
    "\"var\"",
    "<CAPLETTER>",
    "<LETTER>",
    "<IDENTIFIER>",
    "<TYPE>",
    "\"=\"",
    "\"->\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\" >\"",
    "\"<=\"",
    "\" >=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\",\"",
    "\";\"",
  };

}
